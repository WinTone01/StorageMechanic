plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'dev.wuason'
version = '1.0.1.9'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url 'https://jitpack.io' }

    maven { url = "https://repo.codemc.org/repository/maven-public/" }

    maven {
        name = "sonatype-oss-snapshots1"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = 'nexus'
        url = 'https://mvn.lumine.io/repository/maven-public/'
    }
    // for releases
    mavenCentral()
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.19.4-R0.1-SNAPSHOT'
    compileOnly 'com.github.oraxen:oraxen:1.158.1'
    compileOnly 'com.github.LoneDev6:API-ItemsAdder:3.6.2-beta-r3-b'
    compileOnly 'me.clip:placeholderapi:2.11.3'
    compileOnly 'io.lumine:Mythic-Dist:5.5.1'
    compileOnly 'io.lumine:MythicCrucible-Dist:2.0.0-20240122.174338-17'
    compileOnly 'org.apache.commons:commons-lang3:3.12.0'
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
}

shadowJar {
    archiveFileName.set("StorageMechanic-${archiveVersion.get()}.jar")
}


def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}


processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}